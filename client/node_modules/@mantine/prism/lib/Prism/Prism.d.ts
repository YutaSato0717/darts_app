import React from 'react';
import { Language, PrismTheme } from 'prism-react-renderer';
import { DefaultProps, Selectors, MantineColor, MantineNumberSize, MantineTheme } from '@mantine/core';
import useStyles from './Prism.styles';
export declare type PrismStylesNames = Selectors<typeof useStyles>;
export interface PrismProps extends DefaultProps<PrismStylesNames>, Omit<React.ComponentPropsWithoutRef<'div'>, 'children'> {
    /** Code which will be highlighted */
    children: string;
    /** Programming language that should be highlighted */
    language: Language;
    /** True to remove copy to clipboard button */
    noCopy?: boolean;
    /** Copy button tooltip */
    copyLabel?: string;
    /** Copy button tooltip in copied state */
    copiedLabel?: string;
    /** Display line numbers */
    withLineNumbers?: boolean;
    /** Highlight line at given line number with color from theme.colors */
    highlightLines?: Record<string, {
        color: MantineColor;
        label?: string;
    }>;
    /** Force color scheme, defaults to theme.colorScheme */
    colorScheme?: 'dark' | 'light';
    /** Change scroll area component */
    scrollAreaComponent?: any;
    /** Defines whether the code should be trimmed, defaults to true */
    trim?: boolean;
    /** Key of theme.radius or number to set border-radius in px */
    radius?: MantineNumberSize;
    /** Provide custom color scheme */
    getPrismTheme?(theme: MantineTheme, colorScheme: 'light' | 'dark'): PrismTheme;
}
export declare const Prism: React.ForwardRefExoticComponent<PrismProps & React.RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Prism.d.ts.map