import { createStyles, getSortedBreakpoints } from '@mantine/core';

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var useStyles = createStyles((theme, { size, gap, orientation, includeGapInSize, breakpoints = [] }) => {
  const slideBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {
    const property = "maxWidth" in breakpoint ? "max-width" : "min-width";
    const breakpointSize = theme.fn.size({
      size: property === "max-width" ? breakpoint.maxWidth : breakpoint.minWidth,
      sizes: theme.breakpoints
    });
    const breakpointGap = typeof breakpoint.slideGap === "undefined" ? gap : breakpoint.slideGap;
    acc[`@media (${property}: ${breakpointSize + (property === "max-width" ? 0 : 1)}px)`] = {
      flex: `0 0 calc(${typeof breakpoint.slideSize === "number" ? `${breakpoint.slideSize}px` : breakpoint.slideSize} - ${includeGapInSize ? theme.fn.size({
        size: breakpointGap,
        sizes: theme.spacing
      }) / 2 : 0}px)`,
      [orientation === "horizontal" ? "marginRight" : "marginBottom"]: theme.fn.size({
        size: breakpointGap,
        sizes: theme.spacing
      })
    };
    return acc;
  }, {});
  return {
    slide: __spreadValues({
      position: "relative",
      flex: `0 0 calc(${typeof size === "number" ? `${size}px` : size} - ${includeGapInSize ? theme.fn.size({
        size: gap,
        sizes: theme.spacing
      }) / 2 : 0}px)`,
      [orientation === "horizontal" ? "marginRight" : "marginBottom"]: theme.fn.size({
        size: gap,
        sizes: theme.spacing
      })
    }, slideBreakpoints)
  };
});

export default useStyles;
//# sourceMappingURL=CarouselSlide.styles.js.map
